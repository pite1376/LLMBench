export interface Translations {
  // ÈÄöÁî®
  common: {
    confirm: string;
    cancel: string;
    login: string;
    register: string;
    logout: string;
    phone: string;
    verificationCode: string;
    submit: string;
    close: string;
    loading: string;
  };
  
  // È¶ñÈ°µ
  landing: {
    title: string;
    subtitle: string;
    description: string;
    simpleMode: string;
    advancedMode: string;
    simpleModeDesc: string;
    advancedModeDesc: string;
    startUsing: string;
    professionalExperience: string;
    quickStart: string;
    professionalCustomization: string;
    oneClickComparison: string;
    oneClickComparisonDesc: string;
    intelligentRecommendation: string;
    intelligentRecommendationDesc: string;
    simpleInterface: string;
    simpleInterfaceDesc: string;
    parameterTuning: string;
    parameterTuningDesc: string;
    promptManagement: string;
    promptManagementDesc: string;
    deepAnalysis: string;
    deepAnalysisDesc: string;
    supportedModels: string;
    features: {
      dataSecure: string;
      realTimeResponse: string;
      cloudSync: string;
      intelligentAnalysis: string;
    };
  };
  
  // ËÆ§ËØÅ
  auth: {
    loginTitle: string;
    registerTitle: string;
    phoneLabel: string;
    phonePlaceholder: string;
    verificationCodeLabel: string;
    verificationCodePlaceholder: string;
    verificationCodeHint: string;
    loginButton: string;
    registerButton: string;
    switchToRegister: string;
    switchToLogin: string;
    loginSuccess: string;
    registerSuccess: string;
    loginFailed: string;
    registerFailed: string;
    invalidPhone: string;
    invalidCode: string;
    userExists: string;
    userNotExists: string;
  };
}

export const translations: Record<'zh' | 'en', Translations> = {
  zh: {
    common: {
      confirm: 'Á°ÆËÆ§',
      cancel: 'ÂèñÊ∂à',
      login: 'ÁôªÂΩï',
      register: 'Ê≥®ÂÜå',
      logout: 'ÈÄÄÂá∫ÁôªÂΩï',
      phone: 'ÊâãÊú∫Âè∑',
      verificationCode: 'È™åËØÅÁ†Å',
      submit: 'Êèê‰∫§',
      close: 'ÂÖ≥Èó≠',
      loading: 'Âä†ËΩΩ‰∏≠...',
    },
    landing: {
      title: 'ModelBench',
      subtitle: 'Êñ∞‰∏Ä‰ª£AIÊ®°ÂûãÂØπÊØîÂπ≥Âè∞',
      description: 'ËÆ©ÊØè‰∏ÄÊ¨°ÂØπËØùÈÉΩÊàê‰∏∫ÊúÄ‰Ω≥ÈÄâÊã©',
      simpleMode: 'ÂçïÊèêÁ§∫ËØçÊ®°Âºè',
      advancedMode: 'Â§öÊèêÁ§∫ËØçÊ®°Âºè',
      simpleModeDesc: 'Âø´ÈÄü‰∏äÊâãÔºåÂç≥Âàª‰ΩìÈ™å',
      advancedModeDesc: '‰∏ì‰∏öÂÆöÂà∂ÔºåÁ≤æÂáÜÊéßÂà∂',
      startUsing: 'ÂºÄÂßã‰ΩøÁî®',
      professionalExperience: '‰∏ì‰∏ö‰ΩìÈ™å',
      quickStart: 'Âø´ÈÄü‰∏äÊâãÔºåÂç≥Âàª‰ΩìÈ™å',
      professionalCustomization: '‰∏ì‰∏öÂÆöÂà∂ÔºåÁ≤æÂáÜÊéßÂà∂',
      oneClickComparison: '‰∏ÄÈîÆÂØπÊØî',
      oneClickComparisonDesc: 'ÂêåÊó∂ÂêëÂ§ö‰∏™AIÊ®°ÂûãÊèêÈóÆÔºåÂÆûÊó∂ÂØπÊØîÂìçÂ∫îÁªìÊûú',
      intelligentRecommendation: 'Êô∫ËÉΩÊé®Ëçê',
      intelligentRecommendationDesc: 'Ê†πÊçÆÈóÆÈ¢òÁ±ªÂûãËá™Âä®Êé®ËçêÊúÄÈÄÇÂêàÁöÑÊ®°ÂûãÁªÑÂêà',
      simpleInterface: 'ÊûÅÁÆÄÁïåÈù¢',
      simpleInterfaceDesc: '‰∏ìÊ≥®ÂØπËØù‰ΩìÈ™åÔºåÊó†ÈúÄÂ§çÊùÇÈÖçÁΩÆ',
      parameterTuning: 'ÂèÇÊï∞Ë∞É‰ºò',
      parameterTuningDesc: 'Á≤æÁªÜË∞ÉËäÇÊ∏©Â∫¶„ÄÅÈááÊ†∑Á≠âÂèÇÊï∞ÔºåËé∑ÂæóÊúÄ‰Ω≥ËæìÂá∫',
      promptManagement: 'ÊèêÁ§∫ËØçÁÆ°ÁêÜ',
      promptManagementDesc: 'ÂàõÂª∫„ÄÅ‰øùÂ≠òÂíåÁÆ°ÁêÜ‰∏ì‰∏öÊèêÁ§∫ËØçÊ®°Êùø',
      deepAnalysis: 'Ê∑±Â∫¶ÂàÜÊûê',
      deepAnalysisDesc: 'ËØ¶ÁªÜÁöÑÊÄßËÉΩÊåáÊ†áÂíåÊàêÊú¨ÂàÜÊûêÊä•Âëä',
      supportedModels: 'ÊîØÊåÅ OpenAI„ÄÅClaude„ÄÅDeepSeek„ÄÅKimi Á≠â‰∏ªÊµÅAIÊ®°Âûã',
      features: {
        dataSecure: 'üîí Êï∞ÊçÆÂÆâÂÖ®',
        realTimeResponse: '‚ö° ÂÆûÊó∂ÂìçÂ∫î',
        cloudSync: '‚òÅÔ∏è ‰∫ëÁ´ØÂêåÊ≠•',
        intelligentAnalysis: 'üìä Êô∫ËÉΩÂàÜÊûê',
      },
    },
    auth: {
      loginTitle: 'ÁôªÂΩïË¥¶Êà∑',
      registerTitle: 'Ê≥®ÂÜåË¥¶Êà∑',
      phoneLabel: 'ÊâãÊú∫Âè∑Á†Å',
      phonePlaceholder: 'ËØ∑ËæìÂÖ•ÊâãÊú∫Âè∑Á†Å',
      verificationCodeLabel: 'È™åËØÅÁ†Å',
      verificationCodePlaceholder: 'ËØ∑ËæìÂÖ•È™åËØÅÁ†Å',
      verificationCodeHint: 'ÊµãËØïÈ™åËØÅÁ†ÅÔºö123456',
      loginButton: 'ÁôªÂΩï',
      registerButton: 'Ê≥®ÂÜå',
      switchToRegister: 'Ê≤°ÊúâË¥¶Êà∑ÔºüÁ´ãÂç≥Ê≥®ÂÜå',
      switchToLogin: 'Â∑≤ÊúâË¥¶Êà∑ÔºüÁ´ãÂç≥ÁôªÂΩï',
      loginSuccess: 'ÁôªÂΩïÊàêÂäü',
      registerSuccess: 'Ê≥®ÂÜåÊàêÂäü',
      loginFailed: 'ÁôªÂΩïÂ§±Ë¥•',
      registerFailed: 'Ê≥®ÂÜåÂ§±Ë¥•',
      invalidPhone: 'ËØ∑ËæìÂÖ•ÊúâÊïàÁöÑÊâãÊú∫Âè∑Á†Å',
      invalidCode: 'È™åËØÅÁ†ÅÈîôËØØ',
      userExists: 'Áî®Êà∑Â∑≤Â≠òÂú®',
      userNotExists: 'Áî®Êà∑‰∏çÂ≠òÂú®ÔºåËØ∑ÂÖàÊ≥®ÂÜå',
    },
  },
  en: {
    common: {
      confirm: 'Confirm',
      cancel: 'Cancel',
      login: 'Login',
      register: 'Register',
      logout: 'Logout',
      phone: 'Phone',
      verificationCode: 'Verification Code',
      submit: 'Submit',
      close: 'Close',
      loading: 'Loading...',
    },
    landing: {
      title: 'ModelBench',
      subtitle: 'Next-Generation AI Model Comparison Platform',
      description: 'Make every conversation the best choice',
      simpleMode: 'Simple Mode',
      advancedMode: 'Advanced Mode',
      simpleModeDesc: 'Quick start, instant experience',
      advancedModeDesc: 'Professional customization, precise control',
      startUsing: 'Start Using',
      professionalExperience: 'Professional Experience',
      quickStart: 'Quick start, instant experience',
      professionalCustomization: 'Professional customization, precise control',
      oneClickComparison: 'One-Click Comparison',
      oneClickComparisonDesc: 'Ask multiple AI models simultaneously, compare responses in real-time',
      intelligentRecommendation: 'Smart Recommendation',
      intelligentRecommendationDesc: 'Automatically recommend the best model combinations based on question types',
      simpleInterface: 'Minimalist Interface',
      simpleInterfaceDesc: 'Focus on conversation experience, no complex configuration required',
      parameterTuning: 'Parameter Tuning',
      parameterTuningDesc: 'Fine-tune temperature, sampling and other parameters for optimal output',
      promptManagement: 'Prompt Management',
      promptManagementDesc: 'Create, save and manage professional prompt templates',
      deepAnalysis: 'Deep Analysis',
      deepAnalysisDesc: 'Detailed performance metrics and cost analysis reports',
      supportedModels: 'Supports mainstream AI models including OpenAI, Claude, DeepSeek, Kimi',
      features: {
        dataSecure: 'üîí Data Security',
        realTimeResponse: '‚ö° Real-time Response',
        cloudSync: '‚òÅÔ∏è Cloud Sync',
        intelligentAnalysis: 'üìä Intelligent Analysis',
      },
    },
    auth: {
      loginTitle: 'Login Account',
      registerTitle: 'Register Account',
      phoneLabel: 'Phone Number',
      phonePlaceholder: 'Enter phone number',
      verificationCodeLabel: 'Verification Code',
      verificationCodePlaceholder: 'Enter verification code',
      verificationCodeHint: 'Test code: 123456',
      loginButton: 'Login',
      registerButton: 'Register',
      switchToRegister: "Don't have an account? Register now",
      switchToLogin: 'Already have an account? Login now',
      loginSuccess: 'Login successful',
      registerSuccess: 'Registration successful',
      loginFailed: 'Login failed',
      registerFailed: 'Registration failed',
      invalidPhone: 'Please enter a valid phone number',
      invalidCode: 'Invalid verification code',
      userExists: 'User already exists',
      userNotExists: 'User does not exist, please register first',
    },
  },
};

export const useTranslation = (language: 'zh' | 'en'): Translations => {
  return translations[language];
}; 